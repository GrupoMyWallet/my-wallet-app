services:
  web:
    image: ghcr.io/grupomywallet/my-wallet-app/web:latest
    restart: unless-stopped
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - mywallet-storage-production:/var/www/storage:ro
    networks:
      - mywallet-production
    ports:
      - "${NGINX_PORT:-80}:80"
      - "443:443"
    depends_on:
      php-fpm:
        condition: service_healthy

  php-fpm:
    
    image: ghcr.io/grupomywallet/my-wallet-app/php-fpm:latest
    restart: unless-stopped
    volumes:
      - mywallet-storage-production:/var/www/storage 
    env_file:
      - .env
    networks:
      - mywallet-production
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
  php-cli:
    image: ghcr.io/grupomywallet/my-wallet-app/php-cli:latest
    tty: true 
    stdin_open: true 
    env_file:
      - .env
    networks:
      - mywallet-production

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mywallet-production
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  certbot:
    image: certbot/certbot
    container_name: mywallet_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  redis:
    image: redis:alpine
    restart: unless-stopped 
    networks:
      - mywallet-production
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  mywallet-production:

volumes:
  postgres-data:
  mywallet-storage-production:
